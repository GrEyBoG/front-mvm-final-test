{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\usuario\\\\Desktop\\\\mvm\\\\finalTest\\\\frontend\\\\customer-support\\\\src\\\\managerComponents\\\\Table.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { Link } from 'react-router-dom';\nimport { ReactDOM } from \"react-dom\";\nimport { Route, Routes } from 'react-router-dom';\nimport { BrowserRouter } from 'react-router-dom'; //Styles\n\nimport style from '../styles/managerPage/table.css'; //Images\n\nimport description from \"../images/1x/descriptionIcon.png\";\nimport description2x from \"../images/2x/descriptionIcon@2x.png\";\nimport description3x from \"../images/3x/descriptionIcon@3x.png\";\nimport save from \"../images/1x/saveIcon.png\";\nimport save2x from \"../images/2x/saveIcon@2x.png\";\nimport save3x from \"../images/3x/saveIcon@3x.png\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst options = [{\n  value: 0,\n  label: 'PENDIENTE'\n}, {\n  value: 1,\n  label: 'ASIGNADO'\n}];\n\nfunction Table(props) {\n  _s();\n\n  const [descriptionValue, setValueDescription] = useState('');\n  const [settledValue, setSettled] = useState('#');\n\n  const showDescription = (record, description, settled) => {\n    console.log(record.IDResponsable);\n    setSettled('# ' + settled);\n    setValueDescription(description);\n    console.log(description);\n    console.log(settled);\n  };\n\n  const requestData = props.requestData;\n  const responsibleData = props.responsibleData;\n\n  const setResponsible = (e, data) => {\n    const responsible = e.target.value;\n    data.IDResponsable = responsible;\n  };\n\n  const setADate = (e, data) => {\n    const aDate = e.target.value;\n    data.FechaRespuesta = aDate;\n    e.target.value = aDate; // e.target.style.backgroundColor = '#F2F2F2';\n    // e.target.style.display = 'none';\n  };\n\n  const updateDate = async data => {\n    const id = data.IDSolicitud;\n    const params = {\n      FechaRespuesta: data.FechaRespuesta\n    };\n    console.log(JSON.stringify(params));\n    let response = await fetch(`http://localhost:5000/action/updateDate/request/${id}`, {\n      method: 'PUT',\n      headers: {\n        'Content-Type': 'application/json;charset=utf-8'\n      },\n      body: JSON.stringify(params)\n    });\n    let result = await response.json();\n  };\n\n  const updateResponsible = async (data, state) => {\n    const id = data.IDSolicitud;\n    requestData.IDResponsable = data.IDResponsable;\n    const params = {\n      IDResponsable: data.IDResponsable,\n      IDEstado: state\n    };\n    console.log(JSON.stringify(params));\n    let response = await fetch(`http://localhost:5000/action/updateResponsible/request/${id}`, {\n      method: 'PUT',\n      headers: {\n        'Content-Type': 'application/json;charset=utf-8'\n      },\n      body: JSON.stringify(params)\n    });\n    let result = await response.json();\n  };\n\n  const update = async data => {\n    const id = data.IDSolicitud;\n    requestData.IDResponsable = data.IDResponsable;\n    const state = 2;\n\n    if (data.IDResponsable == null) {\n      updateDate(data);\n    } else if (data.FechaRespuesta == null) {\n      updateResponsible(data, state);\n    } else {\n      const params = {\n        IDResponsable: data.IDResponsable,\n        FechaRespuesta: data.FechaRespuesta,\n        IDEstado: state\n      };\n      console.log(JSON.stringify(params));\n      let response = await fetch(`http://localhost:5000/action/update/request/${id}`, {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json;charset=utf-8'\n        },\n        body: JSON.stringify(params)\n      });\n      let result = await response.json();\n    }\n  };\n\n  const x = record => {\n    if (record.IDResponsable === 'Developer') {\n      responsibleData[0].CorreoResponsable = 'fabian.coronel@mvm.com.co';\n      record.IDResponsable = 3;\n    } else if (record.IDResponsable === 'Support') {\n      responsibleData[0].CorreoResponsable = 'juan@mvm.com.co';\n      record.IDResponsable = 4;\n    } else if (record.IDResponsable === 'PQRS') {\n      responsibleData[0].CorreoResponsable = 'pqrs@mvm.com.co';\n      record.IDResponsable = 5;\n    } else if (responsibleData[0].IDResponsable === 'Unassigned') {\n      record.IDResponsable = null;\n    } else {\n      responsibleData[0].CorreoResponsable = 'Unassigned';\n      record.IDResponsable = null;\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"select\", {\n      className: \"managerTable\",\n      onChange: e => setResponsible(e, record),\n      children: responsibleData.map(responsible => /*#__PURE__*/_jsxDEV(\"option\", {\n        value: responsible.IDResponsable,\n        children: responsible.CorreoResponsable\n      }, responsible.IDResponsable, false, {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 25\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 17\n    }, this);\n  };\n\n  console.log(requestData);\n  console.log(responsibleData);\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 193,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Table, \"fNLnSyMC66CmMvP9EqN6RjesvX0=\");\n\n_c = Table;\nexport { Table };\n\nvar _c;\n\n$RefreshReg$(_c, \"Table\");","map":{"version":3,"names":["React","useEffect","useState","Link","ReactDOM","Route","Routes","BrowserRouter","style","description","description2x","description3x","save","save2x","save3x","options","value","label","Table","props","descriptionValue","setValueDescription","settledValue","setSettled","showDescription","record","settled","console","log","IDResponsable","requestData","responsibleData","setResponsible","e","data","responsible","target","setADate","aDate","FechaRespuesta","updateDate","id","IDSolicitud","params","JSON","stringify","response","fetch","method","headers","body","result","json","updateResponsible","state","IDEstado","update","x","CorreoResponsable","map"],"sources":["C:/Users/usuario/Desktop/mvm/finalTest/frontend/customer-support/src/managerComponents/Table.js"],"sourcesContent":["import React, {useEffect, useState} from \"react\";\r\nimport { Link} from 'react-router-dom';\r\nimport { ReactDOM } from \"react-dom\";\r\nimport { Route, Routes } from 'react-router-dom';\r\nimport { BrowserRouter } from 'react-router-dom';\r\n\r\n//Styles\r\nimport style from '../styles/managerPage/table.css';\r\n\r\n//Images\r\nimport description from \"../images/1x/descriptionIcon.png\";\r\nimport description2x from \"../images/2x/descriptionIcon@2x.png\";\r\nimport description3x from \"../images/3x/descriptionIcon@3x.png\";\r\n\r\nimport save from \"../images/1x/saveIcon.png\";\r\nimport save2x from \"../images/2x/saveIcon@2x.png\";\r\nimport save3x from \"../images/3x/saveIcon@3x.png\";\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nconst options = [\r\n    {value: 0, label: 'PENDIENTE'},\r\n    {value: 1, label: 'ASIGNADO'},\r\n]\r\n\r\nfunction Table(props) {\r\n\r\n    const [descriptionValue, setValueDescription] = useState('');   \r\n\r\n    const [settledValue, setSettled] = useState('#');\r\n\r\n    const showDescription = (record, description, settled) => {\r\n        console.log(record.IDResponsable);\r\n        setSettled('# ' + settled);\r\n        setValueDescription(description);\r\n        console.log(description);\r\n        console.log(settled);\r\n\r\n\r\n    }\r\n\r\n    const requestData = props.requestData;\r\n\r\n    const responsibleData = props.responsibleData;\r\n\r\n    const setResponsible = (e, data) => {\r\n        const responsible = e.target.value;\r\n        \r\n        data.IDResponsable = responsible;\r\n\r\n    }\r\n\r\n    const setADate = (e, data) => {\r\n        const aDate = e.target.value;\r\n\r\n        data.FechaRespuesta = aDate;\r\n\r\n        e.target.value = aDate;\r\n\r\n        // e.target.style.backgroundColor = '#F2F2F2';\r\n        // e.target.style.display = 'none';\r\n    }\r\n\r\n    const updateDate = async (data) => {\r\n        const id = data.IDSolicitud\r\n\r\n        const params = {\r\n            FechaRespuesta: data.FechaRespuesta,\r\n        }\r\n\r\n        console.log(JSON.stringify(params));\r\n\r\n        let response = await fetch(`http://localhost:5000/action/updateDate/request/${id}`, {\r\n            method: 'PUT',\r\n            headers: {\r\n                'Content-Type': 'application/json;charset=utf-8'\r\n            },\r\n            body: JSON.stringify(params)\r\n        });\r\n\r\n        let result = await response.json();\r\n\r\n    }\r\n\r\n    const updateResponsible = async (data, state) => {\r\n        const id = data.IDSolicitud\r\n\r\n        requestData.IDResponsable = data.IDResponsable;\r\n\r\n        const params = {\r\n            IDResponsable: data.IDResponsable,\r\n            IDEstado: state\r\n        }\r\n\r\n        console.log(JSON.stringify(params));\r\n\r\n        let response = await fetch(`http://localhost:5000/action/updateResponsible/request/${id}`, {\r\n            method: 'PUT',\r\n            headers: {\r\n                'Content-Type': 'application/json;charset=utf-8'\r\n            },\r\n            body: JSON.stringify(params)\r\n        });\r\n\r\n        let result = await response.json();\r\n    }\r\n\r\n    const update = async (data) => {\r\n        const id = data.IDSolicitud\r\n\r\n        requestData.IDResponsable = data.IDResponsable;\r\n\r\n        const state = 2;\r\n\r\n        if (data.IDResponsable == null) {\r\n            updateDate(data);\r\n        }else if(data.FechaRespuesta == null){\r\n            updateResponsible(data, state);\r\n        }else{\r\n            const params = {\r\n            IDResponsable: data.IDResponsable,\r\n            FechaRespuesta: data.FechaRespuesta,\r\n            IDEstado: state\r\n            }\r\n\r\n            console.log(JSON.stringify(params));\r\n\r\n            let response = await fetch(`http://localhost:5000/action/update/request/${id}`, {\r\n                method: 'PUT',\r\n                headers: {\r\n                    'Content-Type': 'application/json;charset=utf-8'\r\n                },\r\n                body: JSON.stringify(params)\r\n            });\r\n\r\n            let result = await response.json();\r\n        }\r\n        \r\n        \r\n\r\n    }\r\n\r\n\r\n\r\n\r\n    const x = (record)=>{\r\n\r\n        if (record.IDResponsable === 'Developer'){\r\n            responsibleData[0].CorreoResponsable = 'fabian.coronel@mvm.com.co';\r\n            record.IDResponsable = 3;\r\n        } else if (record.IDResponsable ===  'Support'){\r\n            responsibleData[0].CorreoResponsable = 'juan@mvm.com.co';\r\n            record.IDResponsable = 4;\r\n        } else if (record.IDResponsable === 'PQRS'){\r\n            responsibleData[0].CorreoResponsable = 'pqrs@mvm.com.co';\r\n            record.IDResponsable = 5;\r\n        }else if(responsibleData[0].IDResponsable === 'Unassigned'){\r\n            record.IDResponsable = null;\r\n        } else {\r\n            responsibleData[0].CorreoResponsable  = 'Unassigned' ;\r\n            record.IDResponsable = null;\r\n        } \r\n\r\n        return (\r\n                <select className=\"managerTable\" onChange={(e)=> setResponsible(e, record)}>\r\n\r\n                    {responsibleData.map((responsible) => (\r\n\r\n                        <option key={responsible.IDResponsable} value={responsible.IDResponsable}>\r\n                            {responsible.CorreoResponsable}\r\n                        </option>\r\n\r\n                        \r\n                    ))}\r\n\r\n                </select>\r\n\r\n                ) \r\n    } \r\n\r\n\r\n    \r\n\r\n    console.log(requestData);\r\n    console.log(responsibleData);\r\n\r\n    return (\r\n        <React.Fragment>\r\n\r\n        </React.Fragment>\r\n\r\n        \r\n        \r\n        \r\n    );\r\n}\r\n\r\nexport {Table};"],"mappings":"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"},"metadata":{},"sourceType":"module"}